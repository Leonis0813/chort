家計簿プログラム
バージョン管理：要求変更->1桁目増加，外部仕様変更->2桁目増加，内部仕様変更->3桁目増加
ver1.0.0
　【概要】
　　家計簿DBへの情報の追加，中身の表示，収支計算をする
　　[追加]
　　　家計簿に必要な情報を入力させ，適切な入力と判断した後，DBへ登録する
　　[表示]
　　　家計簿DBの中身を日付の古い順に表示する
　　[収支計算]
　　　指定された年ごと，月ごと，日ごとのどれかの方法で収支を計算する

　【外部設計】
　　・ターミナル上で操作
　　・起動後，操作を使用者に番号を入力させることで指定させる
　　・指定された操作ごとに，その後の操作方法を表示．使用者はそれに従って入力
　　・１つの操作が終了，もしくは途中で操作を中断した場合は，再度操作を指定させる
　　・システム終了の入力があるまで繰り返す

　【内部設計】
　　[システム]
　　　・システム全体を管理するクラス(Managerクラス)
　　　・使用者からの入力を受付，使用者へ情報を提示するクラス(Receptorクラス)
　　　・DBを管理するクラス(DBHandlerクラス)
　　　・収支情報を保持するクラス(Settlementクラス)
　　　の４つを作成．それぞれの役割は上記の通り
　　[DB]
　　　収支用，支出用のDBを作成．構成はどちらも同じで，"日付","内容","カテゴリ","値段"の４つ

ver1.0.1
　【変更内容】
　　DBの構造を変更：ユニークキー"id"をincome, expenseテーブルに追加

ver2.0
　【変更内容】
　　GUIによる操作に大幅改良

　【レイアウト】
　　１つのメニューバーと３つのパネルから成る
　　　メニューバー：４つのメニューから成り、以下の項目から構成される
　　　　・メニュー
　　　　　　終了：システムを終了する
　　　　・選択
　　　　　　選択(select)：データベースからデータを選択し、表示する
　　　　・更新
　　　　　　更新(update)：データベース内のデータの値を更新する
　　　　　　挿入(insert)：データベースにデータを挿入する
　　　　　　削除(delete)：データベースからデータを削除する
　　　　・解析
　　　　　　収支計算：年ごと、または月ごと，または日ごとに収支を計算する

　　　パネル：２つのテーブル表示用のパネルと、通知用のパネルがある
　　　　テーブル表示用パネル：ウィンドウ中央部の左右に２枚設置
　　　　　収入テーブル表示用パネル：データベース内の収入用テーブルの中身を表示する
　　　　　支出テーブル表示用パネル：データベース内の支出用テーブルの中身を表示する
　　　　通知用パネル：ウィンドウ下部に配置
　　　　　エラーメッセージや実行結果などを表示する

　【外部設計】
　　上記のレイアウトを持つウィンドウをディスプレイに表示して、操作してもらう
　　操作概要：大きく分けて７つの操作が可能
　　　終了操作
　　　　左上の×ボタンを押すか、メニュー"メニュー"内の"終了"を選択するとシステムを終了させることができる
　　　選択操作
　　　　データベース内のデータを選択し、テーブル表示用パネルにデータを表示する
　　　　操作手順
　　　　　1．メニュー"選択"内の"選択(select)"を選択
　　　　　2．表示されたダイアログに条件を入力
　　　　　3．OKボタンを押す
　　　　ダイアログには、
　　　　　・表示するデータの種類(日付，内容，カテゴリ，金額を選択。複数選択可能)
　　　　　・日付に関する条件
　　　　　・内容に関する条件
　　　　　・カテゴリに関する条件
　　　　　・金額に関する条件
　　　　　・選択を行うテーブル
　　　　の入力欄がある
　　　更新操作
　　　　データベース内の条件に合致したデータの値を変更する
　　　　操作手順
　　　　　1．メニュー"更新"内の"更新(update)"を選択
　　　　　2．表示されたダイアログに変更するデータの条件と変更後の値を入力
　　　　　3．OKボタンを押す
　　　　ダイアログには，
　　　　　・更新条件(日付，内容，カテゴリ，金額)
　　　　　・更新を行うテーブル
　　　　　・更新後の値
　　　　の入力欄がある
　　　挿入操作
　　　　データベースに新たなデータを挿入する
　　　　操作手順
　　　　　1．メニュー"更新"内の"挿入(insert)"を選択
　　　　　2．表示されたダイアログに挿入するデータの値を入力
　　　　　3．OKボタンを押す
　　　　ダイアログには，
　　　　　・値(日付，内容，カテゴリ，金額)
　　　　　・挿入するテーブル
　　　　の入力欄がある
　　　削除操作
　　　　データベースから，条件に合致したデータを削除する
　　　　操作手順
　　　　　1．メニュー"更新"内の"削除(delete)"を選択
　　　　　2．表示されたダイアログに削除するデータの条件を入力
　　　　　3．OKボタンを押す
　　　　ダイアログには，
　　　　　・削除条件(日付，内容，カテゴリ，金額)
　　　　　・削除を行うテーブル
　　　　の入力欄がある
　　　収支計算操作
　　　　データベースを解析して，収支を表示する。収支は年ごと，月ごと，日ごとに計算可能
　　　　操作手順
　　　　　1．メニュー"解析"内の"収支計算"を選択
　　　　　2．サブメニューから"年ごと"，"月ごと"，"日ごと"のどれかを選択
　　　　計算結果はダイアログに表示される
　　　直接更新操作
　　　　テーブル表示用パネルに表示されているデータを選択し，直接値を変更する
　　　　操作方法
　　　　　1．値を変更したいデータをクリック
　　　　　2．値を入力する

　【内部設計】
　　MVCモデルを用いて，システムを実現する．
　　M：モデル
　　　データを管理する．
　　V：ビュー
　　　利用者にデータを見せる．また，利用者が見る画面を管理する．
　　C：コントローラ
　　　イベントを検知したビューからの通知を受け取り，M,Vに指示を与える．また，Mから受け取ったデータをビューに渡すと同時に表示方法を指示する．

　　外部設計で定義した操作ごとの，MVCの挙動を示す．
　　　終了操作
　　　　M：データベースとの接続を切断する．
　　　　V：メニューから"終了"が選択されたことをCに通知．×ボタンが押されたことをCに通知．
　　　　C：Vからの通知を受けると，Mにデータベースとの接続を切断するように指示．
　　　選択操作
　　　　M：SQL文を作成し，実行結果により得られたデータをCに渡す．
　　　　V：ダイアログから選択条件を取得し，選択を行うという通知と共に，条件をCに渡す．また，結果をテーブル表示用パネルに表示する．
　　　　C：Mに条件を渡して選択結果を返すように指示．返ってきた結果をVに表示するように指示．
　　　更新操作
　　　　M：SQL文を作成し，更新後のデータベースをCに渡す．
　　　　V：ダイアログから更新条件と更新後の値を取得し，更新を行うという通知と共に，条件と値をCに渡す．またデータベースをテーブル表示用パネルに表示する．
　　　　C：Mに条件と値を渡して更新結果を返すように指示．返ってきたデータベースをVに表示するように指示．
　　　挿入操作
　　　　M：SQL文を作成し，挿入後のデータベースをCに渡す．
　　　　V：ダイアログから挿入する値を取得し，挿入を行うという通知と共に，値をCに渡す．またデータベースをテーブル表示用パネルに表示する．
　　　　C：Mに値を渡して挿入結果を返すように指示．返ってきたデータベースをVに表示するように指示．
　　　削除操作
　　　　M：SQL文を作成し，削除後のデータベースをCに渡す．
　　　　V：ダイアログから削除条件を取得し，削除を行うという通知と共に，条件をCに渡す．またデータベースをテーブル表示用パネルに表示する．
　　　　C：Mに条件を渡して削除結果を返すように指示．返ってきたデータベースをVに表示するように指示．
　　　収支計算操作
　　　　M：SQL文を作成し，収支リストをCに渡す．
　　　　V：メニューから"収支計算"内のサブメニューが選択されたことをCに通知．また，収支リストをダイアログを作成して表示する．
　　　　C：Vからの通知を受けると，Mに収支を計算するように指示．また，返ってきた収支リストをVに渡す．
　　　直接更新操作
　　　　M：SQL文を作成し，データベースを更新する．
　　　　V：テーブル表示用パネルに表示されているデータのいずれかが選択，編集されると，編集されたデータと編集後の値をCに通知．
　　　　C：Vからの通知を受けると，Mに編集されたデータのIDと編集後の値を送り，データベースを更新するように指示．

ver2.1.0
　【機能追加】
　　ダイアログにチェック機能追加
　　　・OKボタンを押すと，入力されている値のチェックを行う
　　　・入力内容が十分でなければ警告し，十分であれば命令を実行する

ver2.1.1
　【変更内容】
　　日付，内容，カテゴリ，金額それぞれのクラスを作成
　　　日付：年，月，日を保持する
　　　内容：内容を保持する
　　　カテゴリ：カテゴリを保持する
　　　金額：金額を保持する

ver2.1.2
　【リファクタリング】
　　主に，下記の２点をチェックする
　　　・クラス構成が適切かどうか
　　　・余計なフィールド，メソッドがないか
　　終わり次第，下記の作業を行う
　　　・定数の整理
　　　・テーブル内のデータの中で，変更があったもののみ更新する（全削除->全選択して表示 をしない）-> 挿入処理のみ，変更があったもののみ更新
　　　・テーブルに表示されているデータをプログラムにも保持させる -> 保持しない（中止）

ver2.2.0
　【機能追加】
　　連続データ挿入ボタンを追加
　　　・OKボタンの左側に，続けて挿入操作を行うためのボタンを設置
　　　・ボタンを押すとテーブルが更新されるが，ダイアログは表示されたまま（もしくは，一瞬だけ消えて再度表示）

ver2.3.0
　【機能追加】
　　ソート機能追加

ver2.3.1
　【リファクタリング】
　　・クラス構成の変更
　　　・よりMVCモデルを適用した構成に
　　・メソッドを直感的にわかるように変更
　　　・主に，DBアクセス関係の部分

ver2.3.2
　【機能追加】
　　ログ出力
　　　[内容]
　　　　・アプリ起動とその時刻
　　　　・アプリ終了とその時刻
　　　　・SQL文(select, update, insert, delete)
　　　　・SQLの実行結果と実行された時刻
　　　[形式]
　　　　アプリ起動とその時刻：
　　　　　"START application at (" + 現在時刻(yyyy-MM-dd(EEE) HH:mm:ss) + ")"
　　　　アプリ終了とその時刻：
　　　　　"END application at (" + 現在時刻(yyyy-MM-dd(EEE) HH:mm:ss) + ")"
　　　　SQL文(select, update, insert, delete)：
　　　　　"  Execute SQL: " + SQL文 + " at (" + 現在時刻(yyyy-MM-dd(EEE) HH:mm:ss) + ")"
　　　　SQLの実行結果と実行された時刻(時刻関しては上記に記載)：
　　　　　select："    >> Select[¥n"
　　　　　                       + date + ", " + content + ", " + category + ", " + price + "¥n"
　　　　　                       + date + ", " + .....
　　　　　                                                                 ....." + price + "¥n"
　　　　　                   + "]"
　　　　　update："    >> Update[¥n"
　　　　　                     + "{" + date_before + " " + date_after + "}, {" + content_before + " " + content_after + "}, {" + category_before + " " + category_after + "}, {" + price_before + " " + price_after + "}¥n"
　　　　　                     + "{" + date_before + " " + date_after + "}, {" + .....
　　　　　                                                                                                                                                           ....."}, {" + price_before + " " + price_after + "}¥n"
　　　　　                   + "]"
　　　　　insert："    >> Insert[¥n"
　　　　　                       + date + ", " + content + ", " + category + ", " + price + "¥n"
　　　　　                   + "]"
　　　　　delete："    >> Delete[¥n"
　　　　　                       + date + ", " + content + ", " + category + ", " + price + "¥n"
　　　　　                       + date + ", " + .....
　　　　　                                                                 ....." + price + "¥n"
　　　　　                   + "]"

ver3.0.0
　【変更内容】
　　Androidアプリ追加

　【機能仕様】
　　外出時(Macが使えない時)、家計簿DBに登録する内容を一時的に保存する
　　　[機能一覧]
　　　　・家計簿情報の保存
　　　　　1．日付，内容，カテゴリ，金額を入力
　　　　　2．"保存"ボタン押下で入力内容を保存
　　　　・保存内容の編集
　　　　　1，メニューで"編集"を選択
　　　　　2．保存内容の一覧が表示される → タップして選択
　　　　　3．入力内容を編集
　　　　　4．"保存"ボタン押下で編集内容を保存
　　　　・保存内容の削除
　　　　　1．メニューで"削除"を選択
　　　　　2．保存内用の一覧が表示される → 削除したいものをタップ
　　　　　3．確認ダイアログが表示される → "OK"ボタン押下で削除

　【詳細仕様】
　　家計簿情報の保存
　　　・入力項目ごとラベルとテキストボックスを表示させる
　　　・"保存"ボタンが押されると，入力内容のチェックが行われる
　　　・チェック内容はGUIバージョンと同様，空欄，データ型，フォーマットをチェックする
　　　・不正な入力があった場合は，保存せず再入力させる
　　　・正しく入力されていれば，IDを付与してハッシュに格納する
　　　・ハッシュはIDをキー，その他の家計簿情報全体を値とした構造をとる
　　　・アプリ起動時に，家計簿情報がテキストファイルから読み込まれてハッシュに格納される
　　　・アプリ終了時に，ハッシュに格納されている家計簿情報がテキストファイルに上書きされる
　　保存内容の編集
　　　・"編集"が選択されると，ハッシュに格納されている家計簿情報が表示される
　　　・家計簿情報は全て1行で表示される
　　　・選択すると，入力時と同様の画面が表示される(ただし，テキストボックスには情報が既に書き込まれている)
　　　・"保存"ボタンが押されると，ハッシュの情報を更新する
　　　・"トップ"メニューを選択すると，家計簿情報入力画面に戻る
　　保存内容の削除
　　　・"削除"が選択されると，ハッシュに格納されている家計簿情報が表示される
　　　・表示形式は編集時と同様
　　　・タップするとダイアログが表示される
　　　・"OK"ボタンを押すと削除され，"CANCEL"ボタンを押すと削除が中止される
　　　・"トップ"メニューを選択すると，家計簿情報入力画面に戻る

ver3.1.0
　【機能追加】
　　カレンダー表示
　【機能設計】
　　・日付入力部分をタッチするとカレンダーが画面中央に表示される
　　・年月日を選択して"OK"ボタンをタッチすると日付が入力される
　【詳細設計】
　　・日付入力部分のタッチを検知するとカレンダーを表示したダイアログが表示される
　　・"OK"ボタンが押されると選択された年，月，日の値をカレンダーから取得する
　　・DBに登録する日付形式に合わせてテキストビューに日付をセットして表示する
　　　・月，日が1桁の場合，2桁目に0を追加する
　　　・"yyyy-mm-dd"の形式にする

ver4.0.0
　【変更内容】
　　データベースサーバの移動

ver5.0.0
　【変更内容】
　　Webアプリ追加
class Collector {
  + {static} work!
  + initialize(logger : Logger)
  + fetch_race_ids(date : Date) : Array<String>
  + fetch_race(race_id : String) : String
  + fetch_horse(horse_id : String) : String
  + remove_empty_files() : void
}

class Extractor {
  + {static} work!
  + initialize(logger : Logger)
  + fetch_race_ids(date : Date)
  + fetch_race(race_id : String) : String
  + fetch_horse(horse_id : String) : String
  + update_race_info(html : String, race_id : String) : Race
  + update_entry_info(html : String, race_id : String) : void
  + update_jockey_info(jockey_id : String, race_id : String) : Jockey
  + update_horse_info(horse_id : String) : Horse
  + handle_active_record_error(log_attribute : Hash
}

class Aggregator {
  + {static} work!
  + initialize(logger : Logger)
  + create_feature(entry : Entry) : void
  - base_log_attribute() : Hash
  - create_feature_attribute(entry : Entry) : Hash
  - extra_attribute(entry : Entry) : Hash
}

class ApplicationRecord {
  + {static} operation
  + {static} create_or_update!(record : Object, attribute : Hash) : Object
  + {static} creatable?() : Boolean
  + {static} updatable?() : Boolean
  + {static} log_attribute() : Hash
}

class Race {
  - race_id : String
  - race_name : String
  - direction : String
  - distance : Integer
  - grade : String
  - place : String
  - round : Integer
  - start_time : Datetime
  - track : String
  - weather : String
  + {static} create_or_update!(attribute : Hash) : Race
  + {static} log_attribute() : Hash
  + month() : Integer
  + create_or_update_payoff(attribute : Hash) : void
}

class Entry {
  - age : Integer
  - burden_weight : Double
  - final_600m_time : Double
  - number : Integer
  - order : String
  - prize_money : Integer
  - sex : String
  - weight : Double
  - weight_diff : Double
  + {static} create_or_update!(attribute : Hash) : Entry
  + {static} log_attribute() : Hash
  + weight_per() : Double
  + won() : Boolean
}

class Horse {
  - horse_id : String
  - running_style : String
  + {static} create_or_update!(attribute : Hash) : Horse
  + {static} log_attribute() : Hash
  + average_prize_money(time : Datetime) : Double
  + entry_times(time : Datetime) : Integer
  + last_race_order(time : Datetime) : Integer
  + rate_within_third(time : Datetime) : Double
  + second_last_race_order(time : Datetime) : Integer
  + win_times(time : Datetime) : Integer
  + results_before(time : Datetime) : Array<Entry>
}

class Jockey {
  - jockey_id : String
  + {static} create_or_update!(attribute : Hash) : Jockey
  + {static} log_attribute() : Hash
  + average_prize_money(time : Datetime) : Double
  + win_rate(time : Datetime) : Double
  + win_rate_last_four_races(time : Datetime) : Double
  - entry_times(time : Datetime) : Integer
  - results_before(time : Datetime) : Array<Entry>
}

class Win {
  - race_id : String
  - odds : Double
  - favorite : Integer
  - number : Integer
}

class Show {
  - race_id : String
  - odds : Double
  - favorite : Integer
  - number : Integer
}

class BracketQuinella {
  - race_id : String
  - odds : Double
  - favorite : Integer
  - bracket_number1 : Integer
  - bracket_number2 : Integer
}

class Quinella {
  - race_id : String
  - odds : Double
  - favorite : Integer
  - number1 : Integer
  - number2 : Integer
}

class QuinellaPlace {
  - race_id : String
  - odds : Double
  - favorite : Integer
  - number1 : Integer
  - number2 : Integer
}

class Exacta {
  - race_id : String
  - odds : Double
  - favorite : Integer
  - first_place_number : Integer
  - second_place_number : Integer
  + {static} table_name() : String
}

class Trio {
  - race_id : String
  - odds : Double
  - favorite : Integer
  - number1 : Integer
  - number2 : Integer
  - number3 : Integer
}

class Trifecta {
  - race_id : String
  - odds : Double
  - favorite : Integer
  - firts_place_number : Integer
  - second_place_number : Integer
  - third_place_number : Integer
  + {static} table_name() : String
}

class Feature {
  - age : Integer
  - blank : Integer
  - burden_weight : Double
  - direction : String
  - distance : Integer
  - distance_diff : Double
  - entry_times : Integer
  - grade : String
  - horse_average_prize_money : Double
  - jockey_average_prize_money : Double
  - jockey_win_rate_last_four_races : Double
  - jockey_win_rate : Double
  - last_race_order : Integer
  - month : Integer
  - number : Integer
  - place : String
  - rate_within_third : Double
  - round : Integer
  - running_style : String
  - second_last_race_order : Integer
  - sex : String
  - track : String
  - weather : String
  - weight : Double
  - weight_diff : Double
  - weight_per : Double
  - win_times : Integer
  - won : Boolean
  + {static} create_or_update!(attribute : Hash) : Feature
  - set_default_value() : void
}

class ArgumentUtil <<module>> {
  + {static} logger
  + {static} from(default : Date) : Date
  + {static} to(default : Date) : Date
  + {static} operation(default : String) : String
  + {static} check_operation(operation : String) : void
  + {static} included(klass : Class) : void
}

class DenebolaLogger {
  + initialize(file_path : String)
}

class NetkeibaClient {
  + initialize(logger : Logger)
  + http_get_race_ids(date : Date) : Array<String>
  + http_get_race(race_id : String) : String
  + http_get_horse(horse_id : String) : String
}

Collector "1" -- "1" DenebolaLogger
Collector "1" -- "1" NetkeibaClient
Collector ..> ArgumentUtil : <<include>>
Extractor "1" -- "1" DenebolaLogger
Extractor --> Race
Extractor --> Entry
Extractor --> Horse
Extractor --> Jockey
Extractor ..> ArgumentUtil : <<include>>
Aggregator "1" -- "1" DenebolaLogger
Aggregator --> Entry
Aggregator --> Feature
Aggregator ..> ArgumentUtil : <<include>>
ApplicationRecord <|-- Race
ApplicationRecord <|-- Entry
ApplicationRecord <|-- Horse
ApplicationRecord <|-- Jockey
ApplicationRecord <|-- Win
ApplicationRecord <|-- Show
ApplicationRecord <|-- BracketQuinella
ApplicationRecord <|-- Quinella
ApplicationRecord <|-- QuinellaPlace
ApplicationRecord <|-- Exacta
ApplicationRecord <|-- Trio
ApplicationRecord <|-- Trifecta
ApplicationRecord <|-- Feature
Race "1" -- "1 .. *" Entry
Race "1" -- "1" Win
Race "1" -- "3" Show
Race "1" -- "1" BracketQuinella
Race "1" -- "1" Quinella
Race "1" -- "3" QuinellaPlace
Race "1" -- "1" Exacta
Race "1" -- "1" Trio
Race "1" -- "1" Trifecta
Entry "0 .. *" -- "1" Horse
Entry "0 .. *" -- "1" Jockey

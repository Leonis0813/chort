class AnalysisView <<Boundary>>
class PredictionView <<Boundary>>
class EvaluationView <<Boundary>>
class EvaluationResultView <<Boundary>>

class AnalysesController {
  + manage(page : String) : Object
  + execute(num_data : Integer, num_tree : Integer, num_feature : Integer, num_entry : Integer) : Object
  - analysis_param_keys() : Array<String>
}

class PredictionsController {
  + manage(page : String) : Object
  + execute(model : File, test_data: File) : Object
  - prediction_param_keys() : Array<String>
  - check_invalid_file_params(attribute : Hash<String, Object>) : void
  - save_files(prediction_id : Integer) : void
}

class EvaluationsController {
  + manage(page : String) : Object
  + execute(model : File) : Object
  + show(evaluation_id : String) : Object
  - check_invalid_param() : void
  - race_ids() : Array<String>
  - evaluation_param() : Hash<String, Object>
}

class AnalysisJob {
  + perform(analysis_id : Integer)
}

class PredictionJob {
  + perform(prediction_id : Integer)
}

class EvaluationJob {
  + perform(evaluation_id : Integer)
}

class AnalysisMailer {
  + completed(analysis : Analysis)
  + error(analysis : Analysis)
}

class Analysis {
  - num_data : Integer
  - num_tree : Integer
  - num_feature : Integer
  - num_entry : Integer
  - state : String
}

class Prediction {
  - model : String
  - test_data : String
  - results: Array<PredictionResult>
  - state : String
  + import_results(result_file : String) : void
}

class PredictionResult {
  - number : Integer
  - won : Boolean
}

class Evaluation {
  - evaluation_id : String
  - model : String
  - state : String
  - precision : Double
  - recall : Double
  - f_measure : Double
  - data : Array<"Evaluation::Datum">
  + fetch_data() : Array<String>
  + calculate_precision!() : void
}

class "Evaluation::Datum" {
  - race_id : String
  - race_name : String
  - race_url : String
  - prediction_results : Array<PredictionResult>
  - ground_truth : Integer
  + import_prediction_results(result_file : String) : void
}

class NetkeibaClient {
  + http_get_race_top() : Array<String>
}

class FeatureUtil {
  + {static} create_feature(race_id : String) : Hash<String, Object>
}

ブラウザ -- AnalysisView
ブラウザ -- PredictionView
ブラウザ -- EvaluationView
ブラウザ -- EvaluationResultView

AnalysisView -- AnalysesController
AnalysesController --> AnalysisJob
AnalysisJob --> AnalysisMailer
AnalysesController "1" -- "1" Analysis
AnalysisJob "1" -- "1" Analysis

PredictionView -- PredictionsController
PredictionsController --> PredictionJob
PredictionsController "1" -- "1" Prediction
PredictionJob "1" -- "1" Prediction
Prediction "1" -- "*" PredictionResult

EvaluationView -- EvaluationsController
EvaluationsController --> EvaluationJob
EvaluationJob --> NetkeibaClient
EvaluationJob --> FeatureUtil
EvaluationsController "1" -- "1" Evaluation
EvaluationJob "1" -- "1" Evaluation
Evaluation "1" -- "1 .. *" "Evaluation::Datum"
"Evaluation::Datum" "1" -- "*" PredictionResult

EvaluationResultView -- EvaluationsController
